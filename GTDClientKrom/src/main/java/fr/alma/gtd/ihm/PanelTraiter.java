/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PanelTraiter.java
 *
 * Created on 26 nov. 2009, 16:32:08
 */

package fr.alma.gtd.ihm;

import fr.alma.gtd.entities.ChoseAFaire;
import fr.alma.gtd.entities.Element;
import fr.alma.gtd.ihm.renseignement.DialogTache;
import fr.alma.gtd.ihm.renseignement.InfosRenseignement;
import fr.alma.gtd.ihm.tree.MyTransferHandler;
import javax.swing.DefaultListModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author Le_Clubber
 */
public class PanelTraiter extends javax.swing.JPanel {

    private Controleur controleur;
    private DefaultMutableTreeNode racine;
    private DefaultListModel listeChoseAFaire;

    /** Creates new form PanelTraiter */
    public PanelTraiter() {
		this.controleur = Controleur.getInstance();
		this.racine = new DefaultMutableTreeNode("Racine");
		this.listeChoseAFaire = new DefaultListModel();
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        separation1 = new javax.swing.JSplitPane();
        separation2 = new javax.swing.JSplitPane();
        scrollPaneListeCAF = new javax.swing.JScrollPane();
        listeCAF = new javax.swing.JList(listeChoseAFaire);
        renseignements = new javax.swing.JPanel();
        annulerButton = new javax.swing.JButton();
        validerButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        panelRenseignement = new fr.alma.gtd.ihm.renseignement.PanelRenseignement();
        scrollArborescence = new javax.swing.JScrollPane();
        arborescence = new javax.swing.JTree(racine);

        setName("Form"); // NOI18N

        separation1.setDividerLocation(150);
        separation1.setName("separation1"); // NOI18N

        separation2.setDividerLocation(150);
        separation2.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        separation2.setName("separation2"); // NOI18N

        scrollPaneListeCAF.setName("scrollPaneListeCAF"); // NOI18N

        listeCAF.setEnabled(false);
        listeCAF.setName("listeCAF"); // NOI18N
        listeCAF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                listeCAFMousePressed(evt);
            }
        });
        listeCAF.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listeCAFValueChanged();
            }
        });
        scrollPaneListeCAF.setViewportView(listeCAF);

        separation2.setTopComponent(scrollPaneListeCAF);

        renseignements.setName("renseignements"); // NOI18N

        annulerButton.setText("Annuler");
        annulerButton.setName("annulerButton"); // NOI18N

        validerButton.setText("Valider");
        validerButton.setName("validerButton"); // NOI18N
        validerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validerButtonActionPerformed();
            }
        });

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        panelRenseignement.setName("panelRenseignement"); // NOI18N
        jScrollPane1.setViewportView(panelRenseignement);

        javax.swing.GroupLayout renseignementsLayout = new javax.swing.GroupLayout(renseignements);
        renseignements.setLayout(renseignementsLayout);
        renseignementsLayout.setHorizontalGroup(
            renseignementsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(renseignementsLayout.createSequentialGroup()
                .addContainerGap(645, Short.MAX_VALUE)
                .addComponent(validerButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(annulerButton)
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 780, Short.MAX_VALUE)
        );
        renseignementsLayout.setVerticalGroup(
            renseignementsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, renseignementsLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(renseignementsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(annulerButton)
                    .addComponent(validerButton))
                .addContainerGap())
        );

        separation2.setRightComponent(renseignements);

        separation1.setRightComponent(separation2);

        scrollArborescence.setName("scrollArborescence"); // NOI18N

        arborescence.setDragEnabled(true);
        arborescence.setDropMode(javax.swing.DropMode.INSERT);
        arborescence.setEnabled(false);
        arborescence.setName("arborescence"); // NOI18N
        arborescence.setRootVisible(false);
        arborescence.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                arborescenceMousePressed(evt);
            }
        });
        scrollArborescence.setViewportView(arborescence);
        arborescence.setCellRenderer(new fr.alma.gtd.ihm.tree.MyTreeRenderer());
        arborescence.setTransferHandler(new MyTransferHandler());

        DefaultTreeModel treeModel = (DefaultTreeModel) arborescence.getModel();
        treeModel.setAsksAllowsChildren(true);

        separation1.setLeftComponent(scrollArborescence);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(separation1, javax.swing.GroupLayout.DEFAULT_SIZE, 936, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(separation1, javax.swing.GroupLayout.DEFAULT_SIZE, 582, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

	private void arborescenceMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_arborescenceMousePressed
		//Lors d'un clic droit
		//Si on a cliqué sur l'arbre, on peut récupérer l'indice de la ligne avec cette méthode
		//Sinon, la méthode retourne -1
		if((evt.getButton() == java.awt.event.MouseEvent.BUTTON3) && (arborescence.getRowForLocation(evt.getX(), evt.getY()) != -1)){
				//On peut récupérer le chemin du noeud qui a généré l'événement
				arborescence.setSelectionPath(arborescence.getPathForLocation(evt.getX(), evt.getY()));
				//On peut donc en déduire le noeud
				DefaultMutableTreeNode node =  (DefaultMutableTreeNode)arborescence.getLastSelectedPathComponent();
				//On n'a plus qu'à générer notre menu contextuel !
				javax.swing.JPopupMenu jpm = new javax.swing.JPopupMenu();
//				javax.swing.JMenuItem modifMenu = new javax.swing.JMenuItem("Modifier cet élément");
//				modifMenu.addActionListener(new TreeModifMenuListener(node));
//				jpm.add(modifMenu);
				javax.swing.JMenuItem eraseMenu = new javax.swing.JMenuItem("Effacer cet élément");
				eraseMenu.addActionListener(new TreeEraseMenuListener(node));
				jpm.add(eraseMenu);
				jpm.show(arborescence, evt.getX(), evt.getY());
		}
	}//GEN-LAST:event_arborescenceMousePressed

	private void listeCAFMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listeCAFMousePressed
		if(evt.getButton() == java.awt.event.MouseEvent.BUTTON3){
			int index = listeCAF.locationToIndex(evt.getPoint());
			if (index != -1) {
				listeCAF.setSelectedIndex(index);
				javax.swing.JPopupMenu jpm = new javax.swing.JPopupMenu();
				javax.swing.JMenuItem aFaireUnJourMenu = new javax.swing.JMenuItem("Définir comme chose à faire un jour");
				aFaireUnJourMenu.addActionListener(new ListAFaireUnJourMenuListener(listeCAF.getSelectedValue()));
				jpm.add(aFaireUnJourMenu);
				javax.swing.JMenuItem eraseMenu = new javax.swing.JMenuItem("Effacer la chose à faire");
				eraseMenu.addActionListener(new ListEraseMenuListener(listeCAF.getSelectedValue()));
				jpm.add(eraseMenu);
				jpm.show(listeCAF, evt.getX(), evt.getY());
			}
		}
	}//GEN-LAST:event_listeCAFMousePressed

	private void listeCAFValueChanged() {//GEN-FIRST:event_listeCAFValueChanged
		String nom = controleur.getNomChoseAFaire(listeCAF.getSelectedValue());
		panelRenseignement.setNomElement(nom);
	}//GEN-LAST:event_listeCAFValueChanged

	private void validerButtonActionPerformed() {//GEN-FIRST:event_validerButtonActionPerformed
		InfosRenseignement infos = panelRenseignement.getRenseignements();
		controleur.ajoutElement(infos);
		int index = listeCAF.getSelectedIndex();
		if (infos.getNom().equals(listeChoseAFaire.elementAt(index).toString())) {
			ChoseAFaire caf = (ChoseAFaire) listeChoseAFaire.elementAt(index);
			controleur.supprimerCAF(caf);
		}
		listeCAF.setSelectedIndex(0);
	}//GEN-LAST:event_validerButtonActionPerformed

	class TreeEraseMenuListener implements java.awt.event.ActionListener{
		DefaultMutableTreeNode  node;
		public TreeEraseMenuListener(DefaultMutableTreeNode node){
			this.node = node;
		}
		@Override
		public void actionPerformed(java.awt.event.ActionEvent e) {
			DefaultTreeModel model = (DefaultTreeModel) arborescence.getModel();
			DefaultMutableTreeNode parentNode = (DefaultMutableTreeNode) node.getParent();
			controleur.suppressionElement(node);
			model.removeNodeFromParent(this.node);
			model.nodeChanged(parentNode);
		}
	}

	class TreeModifMenuListener implements java.awt.event.ActionListener{
		DefaultMutableTreeNode  node;
		public TreeModifMenuListener(DefaultMutableTreeNode node){
			this.node = node;
		}
		@Override
		public void actionPerformed(java.awt.event.ActionEvent e) {
//			DefaultTreeModel model = (DefaultTreeModel) arborescence.getModel();
//			DefaultMutableTreeNode parentNode = (DefaultMutableTreeNode) node.getParent();
//			controleur.suppressionElement(node);
//			model.removeNodeFromParent(this.node);
//			model.nodeChanged(parentNode);

			new DialogTache(null, true).modifElement((Element) node.getUserObject());

		}
	}

	class ListEraseMenuListener implements java.awt.event.ActionListener{
		private Object object;
		public ListEraseMenuListener(Object obj){
			this.object = obj;
		}
		@Override
		public void actionPerformed(java.awt.event.ActionEvent e) {
			controleur.supprimerCAF(object);
		}
	}

	class ListAFaireUnJourMenuListener implements java.awt.event.ActionListener{
		private Object object;
		public ListAFaireUnJourMenuListener(Object obj){
			this.object = obj;
		}
		@Override
		public void actionPerformed(java.awt.event.ActionEvent e) {
			controleur.aFaireUnJour(object);
		}
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton annulerButton;
    private javax.swing.JTree arborescence;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList listeCAF;
    private fr.alma.gtd.ihm.renseignement.PanelRenseignement panelRenseignement;
    private javax.swing.JPanel renseignements;
    private javax.swing.JScrollPane scrollArborescence;
    private javax.swing.JScrollPane scrollPaneListeCAF;
    private javax.swing.JSplitPane separation1;
    private javax.swing.JSplitPane separation2;
    private javax.swing.JButton validerButton;
    // End of variables declaration//GEN-END:variables

	public void compteCharge(boolean estCharge) {
		arborescence.setEnabled(estCharge);
		listeCAF.setEnabled(estCharge);

		panelRenseignement.compteCharge(estCharge);
	}

	public void actaliser() {
		racine.removeAllChildren();
		controleur.constructionArbreTaches(racine);
		arborescence.updateUI();

		listeChoseAFaire.clear();
		controleur.constructionListeChoseATraiter(listeChoseAFaire);
			
		panelRenseignement.actaliser();
		listeCAF.setSelectedIndex(listeCAF.getFirstVisibleIndex());
	}

}
