/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FenetrePrincipale.java
 *
 * Created on 24 nov. 2009, 05:36:22
 */

package fr.alma.gtd.ihm;

import fr.alma.gtd.ihm.renseignement.DialogTache;
import fr.alma.gtd.ihm.gestionComptes.ChargementCompte;
import fr.alma.gtd.ihm.gestionComptes.NouveauCompte;
import fr.alma.gtd.ihm.renseignement.InfosRenseignement;
import javax.swing.JOptionPane;

/**
 *
 * @author E023963X
 */
public class FenetrePrincipale extends javax.swing.JFrame {

    /** Creates new form FenetrePrincipale */
    public FenetrePrincipale() {
        initComponents();
		initilisation();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelChoseAFaire = new javax.swing.JPanel();
        ajoutLabel = new javax.swing.JLabel();
        ajoutTextField = new javax.swing.JTextField();
        boutonAjouter = new javax.swing.JButton();
        panelStatus = new javax.swing.JPanel();
        statusProgressBar = new javax.swing.JProgressBar();
        statusLabel = new javax.swing.JLabel();
        separateur = new javax.swing.JSeparator();
        onglets = new javax.swing.JTabbedPane();
        barBoutons = new javax.swing.JToolBar();
        ajoutElement = new javax.swing.JButton();
        actualiserTaches = new javax.swing.JButton();
        barreMenu = new javax.swing.JMenuBar();
        Fichier = new javax.swing.JMenu();
        nouveauCompte = new javax.swing.JMenuItem();
        ouvrirCompte = new javax.swing.JMenuItem();
        fermerCompte = new javax.swing.JMenuItem();
        nouvelleTache = new javax.swing.JMenuItem();
        fileSeparator = new javax.swing.JSeparator();
        quitter = new javax.swing.JMenuItem();
        Edition = new javax.swing.JMenu();
        preferences = new javax.swing.JMenuItem();
        contacts = new javax.swing.JMenuItem();
        contexts = new javax.swing.JMenuItem();
        Serveur = new javax.swing.JMenu();
        update = new javax.swing.JMenuItem();
        commit = new javax.swing.JMenuItem();
        Aide = new javax.swing.JMenu();
        formation = new javax.swing.JMenuItem();
        aPropos = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Organisez grâce à la méthode GTD!");
        setName("Form"); // NOI18N

        panelChoseAFaire.setName("panelChoseAFaire"); // NOI18N

        ajoutLabel.setText("Ajout de chose à faire");
        ajoutLabel.setEnabled(false);
        ajoutLabel.setName("ajoutLabel"); // NOI18N

        ajoutTextField.setEnabled(false);
        ajoutTextField.setName("ajoutTextField"); // NOI18N
        ajoutTextField.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                ajoutTextFieldCaretUpdate(evt);
            }
        });
        ajoutTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajoutTextFieldActionPerformed(evt);
            }
        });

        boutonAjouter.setText("Ajouter");
        boutonAjouter.setEnabled(false);
        boutonAjouter.setName("boutonAjouter"); // NOI18N
        boutonAjouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonAjouterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelChoseAFaireLayout = new javax.swing.GroupLayout(panelChoseAFaire);
        panelChoseAFaire.setLayout(panelChoseAFaireLayout);
        panelChoseAFaireLayout.setHorizontalGroup(
            panelChoseAFaireLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelChoseAFaireLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ajoutLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ajoutTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(boutonAjouter)
                .addContainerGap())
        );
        panelChoseAFaireLayout.setVerticalGroup(
            panelChoseAFaireLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelChoseAFaireLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(ajoutTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(ajoutLabel)
                .addComponent(boutonAjouter))
        );

        panelStatus.setName("panelStatus"); // NOI18N

        statusProgressBar.setEnabled(false);
        statusProgressBar.setName("statusProgressBar"); // NOI18N

        statusLabel.setName("statusLabel"); // NOI18N

        separateur.setName("separateur"); // NOI18N

        javax.swing.GroupLayout panelStatusLayout = new javax.swing.GroupLayout(panelStatus);
        panelStatus.setLayout(panelStatusLayout);
        panelStatusLayout.setHorizontalGroup(
            panelStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(separateur, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 764, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelStatusLayout.createSequentialGroup()
                .addContainerGap(604, Short.MAX_VALUE)
                .addComponent(statusLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelStatusLayout.setVerticalGroup(
            panelStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelStatusLayout.createSequentialGroup()
                .addComponent(separateur, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(statusProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(statusLabel)))
        );

        onglets.setEnabled(false);
        onglets.setName("onglets"); // NOI18N

        barBoutons.setRollover(true);
        barBoutons.setName("barBoutons"); // NOI18N

        ajoutElement.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/svn-add.png"))); // NOI18N
        ajoutElement.setText("Ajouter un élément");
        ajoutElement.setEnabled(false);
        ajoutElement.setFocusable(false);
        ajoutElement.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        ajoutElement.setName("ajoutElement"); // NOI18N
        ajoutElement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajoutElementActionPerformed(evt);
            }
        });
        barBoutons.add(ajoutElement);

        actualiserTaches.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/svn-revert.png"))); // NOI18N
        actualiserTaches.setText("Actualiser les taches");
        actualiserTaches.setEnabled(false);
        actualiserTaches.setFocusable(false);
        actualiserTaches.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        actualiserTaches.setName("JButton1"); // NOI18N
        actualiserTaches.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualiserTachesActionPerformed(evt);
            }
        });
        barBoutons.add(actualiserTaches);

        barreMenu.setName("barreMenu"); // NOI18N

        Fichier.setText("Fichier");
        Fichier.setName("Fichier"); // NOI18N

        nouveauCompte.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        nouveauCompte.setText("Nouveau compte");
        nouveauCompte.setName("nouveauCompte"); // NOI18N
        nouveauCompte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nouveauCompteActionPerformed(evt);
            }
        });
        Fichier.add(nouveauCompte);

        ouvrirCompte.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        ouvrirCompte.setText("Ouvrir un compte");
        ouvrirCompte.setName("ouvrirCompte"); // NOI18N
        ouvrirCompte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ouvrirCompteActionPerformed(evt);
            }
        });
        Fichier.add(ouvrirCompte);

        fermerCompte.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        fermerCompte.setText("Déconnexion");
        fermerCompte.setEnabled(false);
        fermerCompte.setName("fermerCompte"); // NOI18N
        fermerCompte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fermerCompteActionPerformed(evt);
            }
        });
        Fichier.add(fermerCompte);

        nouvelleTache.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_MASK));
        nouvelleTache.setText("Nouvelle tâche");
        nouvelleTache.setEnabled(false);
        nouvelleTache.setName("nouvelleTache"); // NOI18N
        nouvelleTache.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nouvelleTacheActionPerformed(evt);
            }
        });
        Fichier.add(nouvelleTache);

        fileSeparator.setName("fileSeparator"); // NOI18N
        Fichier.add(fileSeparator);

        quitter.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        quitter.setText("Quitter");
        quitter.setName("quitter"); // NOI18N
        quitter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitterActionPerformed(evt);
            }
        });
        Fichier.add(quitter);

        barreMenu.add(Fichier);

        Edition.setText("Edition");
        Edition.setName("Edition"); // NOI18N

        preferences.setText("Préférences");
        preferences.setName("preferences"); // NOI18N
        preferences.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                preferencesActionPerformed(evt);
            }
        });
        Edition.add(preferences);

        contacts.setText("Gestion des contacts");
        contacts.setEnabled(false);
        contacts.setName("contacts"); // NOI18N
        contacts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contactsActionPerformed(evt);
            }
        });
        Edition.add(contacts);

        contexts.setText("Gestion des contextes");
        contexts.setEnabled(false);
        contexts.setName("contexts"); // NOI18N
        contexts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contextsActionPerformed(evt);
            }
        });
        Edition.add(contexts);

        barreMenu.add(Edition);

        Serveur.setText("Serveur");
        Serveur.setName("Serveur"); // NOI18N

        update.setText("Update");
        update.setEnabled(false);
        update.setName("update"); // NOI18N
        Serveur.add(update);

        commit.setText("Commit");
        commit.setEnabled(false);
        commit.setName("commit"); // NOI18N
        Serveur.add(commit);

        barreMenu.add(Serveur);

        Aide.setText("Aide");
        Aide.setName("Aide"); // NOI18N

        formation.setText("Se former à GTD");
        formation.setEnabled(false);
        formation.setName("formation"); // NOI18N
        Aide.add(formation);

        aPropos.setText("A propos...");
        aPropos.setName("aPropos"); // NOI18N
        aPropos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aProposActionPerformed(evt);
            }
        });
        Aide.add(aPropos);

        barreMenu.add(Aide);

        setJMenuBar(barreMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(barBoutons, javax.swing.GroupLayout.DEFAULT_SIZE, 764, Short.MAX_VALUE)
            .addComponent(panelChoseAFaire, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelStatus, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(onglets, javax.swing.GroupLayout.DEFAULT_SIZE, 764, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(barBoutons, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelChoseAFaire, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(onglets, javax.swing.GroupLayout.DEFAULT_SIZE, 387, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void quitterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitterActionPerformed
        controleur.deconnexion();
		System.exit(0);
    }//GEN-LAST:event_quitterActionPerformed

    private void aProposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aProposActionPerformed
        String mess = "Instrumentation de la méthode GTD!\n";
        mess += "\nProgrammé par :\n" +
                "    -Braud Jérémy\n" +
				"    -Bremard Nicolas\n" +
				"    -Lucas Boris\n" +
                "    -Krommenhoek Cédric\n\n" +
                "Contacts :\n" +
                "     prenom.nom@etu.univ-nantes.fr";
        JOptionPane.showMessageDialog(null, mess, "A propos", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_aProposActionPerformed

	private void preferencesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_preferencesActionPerformed
		fenetrePreferences.setVisible(true);
	}//GEN-LAST:event_preferencesActionPerformed

	private void nouvelleTacheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nouvelleTacheActionPerformed
		DialogTache dialog = new DialogTache(this, true);
//		dt.setVisible(true);
		InfosRenseignement infos = dialog.showDialog();
		if (infos != null) {
			while (infos.getNom().length() == 0) {
				JOptionPane.showMessageDialog(null, "Veuiller renseigner le nom de la tâche", "Erreur", JOptionPane.ERROR_MESSAGE);
				infos = dialog.showDialog();
			}
			Controleur.getInstance().ajoutElement(infos);
		}
	}//GEN-LAST:event_nouvelleTacheActionPerformed

	private void boutonAjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonAjouterActionPerformed
		ajouterChoseAFaire();
	}//GEN-LAST:event_boutonAjouterActionPerformed

	private void ajoutTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajoutTextFieldActionPerformed
		ajouterChoseAFaire();
	}//GEN-LAST:event_ajoutTextFieldActionPerformed

	private void ajoutTextFieldCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_ajoutTextFieldCaretUpdate
		boutonAjouter.setEnabled(ajoutTextField.getText().length() > 0);
	}//GEN-LAST:event_ajoutTextFieldCaretUpdate

	private void nouveauCompteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nouveauCompteActionPerformed
		controleur.nouveauCompte(new NouveauCompte(this, true));
	}//GEN-LAST:event_nouveauCompteActionPerformed

	private void ouvrirCompteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ouvrirCompteActionPerformed
		controleur.chargerCompte(new ChargementCompte(this, true));
	}//GEN-LAST:event_ouvrirCompteActionPerformed

	private void fermerCompteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fermerCompteActionPerformed
		controleur.deconnexion();
	}//GEN-LAST:event_fermerCompteActionPerformed

	private void ajoutElementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajoutElementActionPerformed
		DialogTache dialog = new DialogTache(this, true);
		InfosRenseignement infos = dialog.showDialog();
		if (infos != null) {
			while (infos.getNom().length() == 0) {
				JOptionPane.showMessageDialog(null, "Veuiller renseigner le nom de la tâche", "Erreur", JOptionPane.ERROR_MESSAGE);
				infos = dialog.showDialog();
			}
			Controleur.getInstance().ajoutElement(infos);
		}
	}//GEN-LAST:event_ajoutElementActionPerformed

	private void contactsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contactsActionPerformed
		new DialogGestionContacts(this, true).setVisible(true);
	}//GEN-LAST:event_contactsActionPerformed

	private void contextsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contextsActionPerformed
		new DialogGestionContextes(this, true).setVisible(true);
	}//GEN-LAST:event_contextsActionPerformed

        private void actualiserTachesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualiserTachesActionPerformed
            controleur.organiserTaches();
            actaliser();
        }//GEN-LAST:event_actualiserTachesActionPerformed
		
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu Aide;
    private javax.swing.JMenu Edition;
    private javax.swing.JMenu Fichier;
    private javax.swing.JMenu Serveur;
    private javax.swing.JMenuItem aPropos;
    private javax.swing.JButton actualiserTaches;
    private javax.swing.JButton ajoutElement;
    private javax.swing.JLabel ajoutLabel;
    private javax.swing.JTextField ajoutTextField;
    private javax.swing.JToolBar barBoutons;
    private javax.swing.JMenuBar barreMenu;
    private javax.swing.JButton boutonAjouter;
    private javax.swing.JMenuItem commit;
    private javax.swing.JMenuItem contacts;
    private javax.swing.JMenuItem contexts;
    private javax.swing.JMenuItem fermerCompte;
    private javax.swing.JSeparator fileSeparator;
    private javax.swing.JMenuItem formation;
    private javax.swing.JMenuItem nouveauCompte;
    private javax.swing.JMenuItem nouvelleTache;
    private javax.swing.JTabbedPane onglets;
    private javax.swing.JMenuItem ouvrirCompte;
    private javax.swing.JPanel panelChoseAFaire;
    private javax.swing.JPanel panelStatus;
    private javax.swing.JMenuItem preferences;
    private javax.swing.JMenuItem quitter;
    private javax.swing.JSeparator separateur;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JProgressBar statusProgressBar;
    private javax.swing.JMenuItem update;
    // End of variables declaration//GEN-END:variables

	private DialogPreferences fenetrePreferences;
	private Controleur controleur;
	private PanelChosesAFaire panelCAF;
	private PanelTaches panelTaches;
	private PanelTraiter panelTraiter;

	private void initilisation() {
		setLocationRelativeTo(null);
		statusProgressBar.setVisible(false);

		controleur = Controleur.getInstance();
		controleur.setVue(this);

		panelTaches = new PanelTaches();
		panelTraiter = new PanelTraiter();
		panelCAF = new PanelChosesAFaire();
		onglets.add("Tâches", panelTaches);
		onglets.add("Traiter", panelTraiter);
		onglets.add("Un jour", panelCAF);

		fenetrePreferences = new DialogPreferences(this, true);

		// apparence selon le systeme
		try {
			javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
			javax.swing.SwingUtilities.updateComponentTreeUI(this);
			System.setProperty("apple.laf.useScreenMenuBar", "true");
			System.setProperty("com.apple.mrj.application.apple.menu.about.name", "GTD!");
		} catch (Exception e) {
			System.out.println("LookAndFeel non supporté.");
		}
	}

	private void ajouterChoseAFaire() {
		String caf = ajoutTextField.getText();
		if (caf.length()>0) {
			controleur.addChoseAFaire(caf);
			boutonAjouter.setEnabled(false);
			ajoutTextField.setText(null);
		}
	}

	public void compteCharge(boolean estCharge) {
		nouveauCompte.setEnabled(!estCharge);
		ouvrirCompte.setEnabled(!estCharge);
		fermerCompte.setEnabled(estCharge);
		nouvelleTache.setEnabled(estCharge);
//		update.setEnabled(estCharge);
//		commit.setEnabled(estCharge);
		contacts.setEnabled(estCharge);
		contexts.setEnabled(estCharge);
		ajoutElement.setEnabled(estCharge);
		actualiserTaches.setEnabled(estCharge);
		ajoutLabel.setEnabled(estCharge);
		ajoutTextField.setEnabled(estCharge);
		onglets.setEnabled(estCharge);

		panelTaches.compteCharge(estCharge);
		panelTraiter.compteCharge(estCharge);
		panelCAF.compteCharge(estCharge);
	}

	public void actaliser() {
		panelTaches.actaliser();
		panelTraiter.actaliser();
		panelCAF.actaliser();
	}

	public void actualiserListeTache() {
		panelTaches.actualiserListeTache();
	}

	void actualiserContextes() {
		panelTaches.actualiserCheckBox();
	}

}
